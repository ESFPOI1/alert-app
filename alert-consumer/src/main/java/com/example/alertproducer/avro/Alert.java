/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.example.alertproducer.avro;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class Alert extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 1322708727867109840L;


  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Alert\",\"namespace\":\"com.example.alertproducer.avro\",\"fields\":[{\"name\":\"description\",\"type\":\"string\"},{\"name\":\"AlertColor\",\"type\":{\"type\":\"enum\",\"name\":\"AlertColor\",\"symbols\":[\"YELLOW\",\"ORANGE\",\"RED\"]}},{\"name\":\"createdOn\",\"type\":{\"type\":\"long\",\"logicalType\":\"timestamp-millis\"}}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static final SpecificData MODEL$ = new SpecificData();
  static {
    MODEL$.addLogicalTypeConversion(new org.apache.avro.data.TimeConversions.TimestampMillisConversion());
  }

  private static final BinaryMessageEncoder<Alert> ENCODER =
      new BinaryMessageEncoder<>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<Alert> DECODER =
      new BinaryMessageDecoder<>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<Alert> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<Alert> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<Alert> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this Alert to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a Alert from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a Alert instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static Alert fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  private java.lang.CharSequence description;
  private com.example.alertproducer.avro.AlertColor AlertColor;
  private java.time.Instant createdOn;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public Alert() {}

  /**
   * All-args constructor.
   * @param description The new value for description
   * @param AlertColor The new value for AlertColor
   * @param createdOn The new value for createdOn
   */
  public Alert(java.lang.CharSequence description, com.example.alertproducer.avro.AlertColor AlertColor, java.time.Instant createdOn) {
    this.description = description;
    this.AlertColor = AlertColor;
    this.createdOn = createdOn.truncatedTo(java.time.temporal.ChronoUnit.MILLIS);
  }

  @Override
  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }

  @Override
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }

  // Used by DatumWriter.  Applications should not call.
  @Override
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return description;
    case 1: return AlertColor;
    case 2: return createdOn;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  private static final org.apache.avro.Conversion<?>[] conversions =
      new org.apache.avro.Conversion<?>[] {
      null,
      null,
      new org.apache.avro.data.TimeConversions.TimestampMillisConversion(),
      null
  };

  @Override
  public org.apache.avro.Conversion<?> getConversion(int field) {
    return conversions[field];
  }

  // Used by DatumReader.  Applications should not call.
  @Override
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: description = (java.lang.CharSequence)value$; break;
    case 1: AlertColor = (com.example.alertproducer.avro.AlertColor)value$; break;
    case 2: createdOn = (java.time.Instant)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'description' field.
   * @return The value of the 'description' field.
   */
  public java.lang.CharSequence getDescription() {
    return description;
  }


  /**
   * Sets the value of the 'description' field.
   * @param value the value to set.
   */
  public void setDescription(java.lang.CharSequence value) {
    this.description = value;
  }

  /**
   * Gets the value of the 'AlertColor' field.
   * @return The value of the 'AlertColor' field.
   */
  public com.example.alertproducer.avro.AlertColor getAlertColor() {
    return AlertColor;
  }


  /**
   * Sets the value of the 'AlertColor' field.
   * @param value the value to set.
   */
  public void setAlertColor(com.example.alertproducer.avro.AlertColor value) {
    this.AlertColor = value;
  }

  /**
   * Gets the value of the 'createdOn' field.
   * @return The value of the 'createdOn' field.
   */
  public java.time.Instant getCreatedOn() {
    return createdOn;
  }


  /**
   * Sets the value of the 'createdOn' field.
   * @param value the value to set.
   */
  public void setCreatedOn(java.time.Instant value) {
    this.createdOn = value.truncatedTo(java.time.temporal.ChronoUnit.MILLIS);
  }

  /**
   * Creates a new Alert RecordBuilder.
   * @return A new Alert RecordBuilder
   */
  public static com.example.alertproducer.avro.Alert.Builder newBuilder() {
    return new com.example.alertproducer.avro.Alert.Builder();
  }

  /**
   * Creates a new Alert RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new Alert RecordBuilder
   */
  public static com.example.alertproducer.avro.Alert.Builder newBuilder(com.example.alertproducer.avro.Alert.Builder other) {
    if (other == null) {
      return new com.example.alertproducer.avro.Alert.Builder();
    } else {
      return new com.example.alertproducer.avro.Alert.Builder(other);
    }
  }

  /**
   * Creates a new Alert RecordBuilder by copying an existing Alert instance.
   * @param other The existing instance to copy.
   * @return A new Alert RecordBuilder
   */
  public static com.example.alertproducer.avro.Alert.Builder newBuilder(com.example.alertproducer.avro.Alert other) {
    if (other == null) {
      return new com.example.alertproducer.avro.Alert.Builder();
    } else {
      return new com.example.alertproducer.avro.Alert.Builder(other);
    }
  }

  /**
   * RecordBuilder for Alert instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Alert>
    implements org.apache.avro.data.RecordBuilder<Alert> {

    private java.lang.CharSequence description;
    private com.example.alertproducer.avro.AlertColor AlertColor;
    private java.time.Instant createdOn;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$, MODEL$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.example.alertproducer.avro.Alert.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.description)) {
        this.description = data().deepCopy(fields()[0].schema(), other.description);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.AlertColor)) {
        this.AlertColor = data().deepCopy(fields()[1].schema(), other.AlertColor);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.createdOn)) {
        this.createdOn = data().deepCopy(fields()[2].schema(), other.createdOn);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
    }

    /**
     * Creates a Builder by copying an existing Alert instance
     * @param other The existing instance to copy.
     */
    private Builder(com.example.alertproducer.avro.Alert other) {
      super(SCHEMA$, MODEL$);
      if (isValidValue(fields()[0], other.description)) {
        this.description = data().deepCopy(fields()[0].schema(), other.description);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.AlertColor)) {
        this.AlertColor = data().deepCopy(fields()[1].schema(), other.AlertColor);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.createdOn)) {
        this.createdOn = data().deepCopy(fields()[2].schema(), other.createdOn);
        fieldSetFlags()[2] = true;
      }
    }

    /**
      * Gets the value of the 'description' field.
      * @return The value.
      */
    public java.lang.CharSequence getDescription() {
      return description;
    }


    /**
      * Sets the value of the 'description' field.
      * @param value The value of 'description'.
      * @return This builder.
      */
    public com.example.alertproducer.avro.Alert.Builder setDescription(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.description = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'description' field has been set.
      * @return True if the 'description' field has been set, false otherwise.
      */
    public boolean hasDescription() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'description' field.
      * @return This builder.
      */
    public com.example.alertproducer.avro.Alert.Builder clearDescription() {
      description = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'AlertColor' field.
      * @return The value.
      */
    public com.example.alertproducer.avro.AlertColor getAlertColor() {
      return AlertColor;
    }


    /**
      * Sets the value of the 'AlertColor' field.
      * @param value The value of 'AlertColor'.
      * @return This builder.
      */
    public com.example.alertproducer.avro.Alert.Builder setAlertColor(com.example.alertproducer.avro.AlertColor value) {
      validate(fields()[1], value);
      this.AlertColor = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'AlertColor' field has been set.
      * @return True if the 'AlertColor' field has been set, false otherwise.
      */
    public boolean hasAlertColor() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'AlertColor' field.
      * @return This builder.
      */
    public com.example.alertproducer.avro.Alert.Builder clearAlertColor() {
      AlertColor = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'createdOn' field.
      * @return The value.
      */
    public java.time.Instant getCreatedOn() {
      return createdOn;
    }


    /**
      * Sets the value of the 'createdOn' field.
      * @param value The value of 'createdOn'.
      * @return This builder.
      */
    public com.example.alertproducer.avro.Alert.Builder setCreatedOn(java.time.Instant value) {
      validate(fields()[2], value);
      this.createdOn = value.truncatedTo(java.time.temporal.ChronoUnit.MILLIS);
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'createdOn' field has been set.
      * @return True if the 'createdOn' field has been set, false otherwise.
      */
    public boolean hasCreatedOn() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'createdOn' field.
      * @return This builder.
      */
    public com.example.alertproducer.avro.Alert.Builder clearCreatedOn() {
      fieldSetFlags()[2] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public Alert build() {
      try {
        Alert record = new Alert();
        record.description = fieldSetFlags()[0] ? this.description : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.AlertColor = fieldSetFlags()[1] ? this.AlertColor : (com.example.alertproducer.avro.AlertColor) defaultValue(fields()[1]);
        record.createdOn = fieldSetFlags()[2] ? this.createdOn : (java.time.Instant) defaultValue(fields()[2]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<Alert>
    WRITER$ = (org.apache.avro.io.DatumWriter<Alert>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<Alert>
    READER$ = (org.apache.avro.io.DatumReader<Alert>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}










