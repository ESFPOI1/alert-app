server.port=9080
spring.application.name=alert-consumer
spring.cloud.stream.kafka.binder.brokers=${KAFKA_HOST:localhost}:${KAFKA_PORT:29092}
spring.cloud.stream.kafka.binder.min-partition-count=3
spring.cloud.stream.bindings.alerts-in-0.destination=com.example.alert-producer.alerts
spring.cloud.stream.bindings.alerts-in-0.group=alertConsumerGroup
spring.cloud.stream.bindings.alerts-in-0.content-type=application/*+avro
spring.cloud.stream.bindings.alerts-in-0.consumer.useNativeEncoding=true
spring.cloud.stream.kafka.binder.consumer-properties.key.deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.cloud.stream.kafka.binder.consumer-properties.value.deserializer=io.confluent.kafka.serializers.KafkaAvroDeserializer
spring.cloud.stream.kafka.binder.consumer-properties.schema.registry.url=http://${SCHEMA_REGISTRY_HOST:localhost}:${SCHEMA_REGISTRY_PORT:8081}
spring.cloud.stream.kafka.binder.consumer-properties.value.subject.name.strategy=io.confluent.kafka.serializers.subject.RecordNameStrategy
spring.cloud.stream.kafka.binder.consumer-properties.specific.avro.reader=true
