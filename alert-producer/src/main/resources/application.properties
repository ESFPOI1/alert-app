spring.application.name=alert-producer
spring.cloud.stream.kafka.binder.brokers=${KAFKA_HOST:localhost}:${KAFKA_PORT:29092}
spring.cloud.stream.kafka.binder.min-partition-count=3
spring.cloud.stream.output-bindings=alerts
spring.cloud.stream.bindings.alerts-out-0.destination=com.example.alert-producer.alerts
spring.cloud.stream.bindings.alerts-out-0.content-type=application/*+avro
spring.cloud.stream.bindings.alerts-out-0.producer.useNativeEncoding=true
spring.cloud.stream.kafka.binder.producer-properties.key.serializer=org.apache.kafka.common.serialization.StringSerializer
spring.cloud.stream.kafka.binder.producer-properties.value.serializer=io.confluent.kafka.serializers.KafkaAvroSerializer
spring.cloud.stream.kafka.binder.producer-properties.schema.registry.url=http://${SCHEMA_REGISTRY_HOST:localhost}:${SCHEMA_REGISTRY_PORT:8081}
spring.cloud.stream.kafka.binder.producer-properties.value.subject.name.strategy=io.confluent.kafka.serializers.subject.RecordNameStrategy
